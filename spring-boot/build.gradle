plugins {
    id 'org.springframework.boot' version '3.2.5'
    id 'io.spring.dependency-management' version '1.1.5'
    id 'java'
}

ext {
    set('springCloudVersion', "2023.0.2")
}

repositories {
    mavenCentral()
}

group = 'com.samsungds.ims'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // SMTP
    implementation 'org.subethamail:subethasmtp:3.1.7'

    // unirest-java
    implementation 'com.konghq:unirest-java:3.14.5'
    implementation 'org.jsoup:jsoup:1.20.1'

    // Spring Boot
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-data-rest'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'

    implementation 'org.springframework.cloud:spring-cloud-starter'

    // Apache
    implementation 'org.apache.commons:commons-lang3:3.14.0'

    // JPA
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.data:spring-data-rest-hal-explorer'

    // Database
    implementation 'org.bgee.log4jdbc-log4j2:log4jdbc-log4j2-jdbc4.1:1.16'
    runtimeOnly 'com.h2database:h2'

    // JWT
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

    // Lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // 개발 도구
    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    // 테스트
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'io.projectreactor:reactor-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    testCompileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

tasks.named('test') {
    useJUnitPlatform()
}

// 프론트엔드 빌드 결과물을 백엔드 정적 리소스 폴더로 복사
tasks.register('copyFrontendBuildFiles', Copy) {
    dependsOn ':svelte-app:build'
    from "../svelte-app/build"
    into "${projectDir}/src/main/resources/static"
}

// 백엔드 빌드 전에 프론트엔드 파일 복사 작업 실행
tasks.named('processResources') {
    // 테스트 실행이 아닌 경우에만 프론트엔드 빌드에 의존
    if (!gradle.startParameter.taskNames.any { it.toLowerCase().contains('test') }) {
        // dependsOn 'copyFrontendBuildFiles'
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}

bootRun {
    systemProperty "spring.profiles.active", "local"
    jvmArgs = [
        "-Dspring.profiles.active=local",
        "-Dfile.encoding=UTF-8"
    ]
}

bootJar {
    archiveBaseName.set("jira-mail-manager")
    archiveVersion.set("1.0.0")
    manifest {
        attributes "Spring-Profiles-Active": "prod"
    }
}